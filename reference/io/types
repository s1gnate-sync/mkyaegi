type ByteReader interface {
	ReadByte() (byte, error)
}
type ByteScanner interface {
	ByteReader
	UnreadByte() error
}
type ByteWriter interface {
	WriteByte(c byte) error
}
type Closer interface {
	Close() error
}
type LimitedReader struct {
	R Reader // underlying reader
	N int64  // max bytes remaining
}
func (l *LimitedReader) Read(p []byte) (n int, err error)
type OffsetWriter struct {
	// Has unexported fields.
}
func NewOffsetWriter(w WriterAt, off int64) *OffsetWriter
func (o *OffsetWriter) Seek(offset int64, whence int) (int64, error)
func (o *OffsetWriter) Write(p []byte) (n int, err error)
func (o *OffsetWriter) WriteAt(p []byte, off int64) (n int, err error)
type PipeReader struct {
	// Has unexported fields.
}
func (r *PipeReader) Close() error
func (r *PipeReader) CloseWithError(err error) error
func (r *PipeReader) Read(data []byte) (n int, err error)
type PipeWriter struct {
	// Has unexported fields.
}
func (w *PipeWriter) Close() error
func (w *PipeWriter) CloseWithError(err error) error
func (w *PipeWriter) Write(data []byte) (n int, err error)
type ReadCloser interface {
	Reader
	Closer
}
func NopCloser(r Reader) ReadCloser
type ReadSeekCloser interface {
	Reader
	Seeker
	Closer
}
type ReadSeeker interface {
	Reader
	Seeker
}
type ReadWriteCloser interface {
	Reader
	Writer
	Closer
}
type ReadWriteSeeker interface {
	Reader
	Writer
	Seeker
}
type ReadWriter interface {
	Reader
	Writer
}
type Reader interface {
	Read(p []byte) (n int, err error)
}
func LimitReader(r Reader, n int64) Reader
func MultiReader(readers ...Reader) Reader
func TeeReader(r Reader, w Writer) Reader
type ReaderAt interface {
	ReadAt(p []byte, off int64) (n int, err error)
}
type ReaderFrom interface {
	ReadFrom(r Reader) (n int64, err error)
}
type RuneReader interface {
	ReadRune() (r rune, size int, err error)
}
type RuneScanner interface {
	RuneReader
	UnreadRune() error
}
type SectionReader struct {
	// Has unexported fields.
}
func NewSectionReader(r ReaderAt, off int64, n int64) *SectionReader
func (s *SectionReader) Outer() (r ReaderAt, off int64, n int64)
func (s *SectionReader) Read(p []byte) (n int, err error)
func (s *SectionReader) ReadAt(p []byte, off int64) (n int, err error)
func (s *SectionReader) Seek(offset int64, whence int) (int64, error)
func (s *SectionReader) Size() int64
type Seeker interface {
	Seek(offset int64, whence int) (int64, error)
}
type StringWriter interface {
	WriteString(s string) (n int, err error)
}
type WriteCloser interface {
	Writer
	Closer
}
type WriteSeeker interface {
	Writer
	Seeker
}
type Writer interface {
	Write(p []byte) (n int, err error)
}
var Discard Writer = discard{}
func MultiWriter(writers ...Writer) Writer
type WriterAt interface {
	WriteAt(p []byte, off int64) (n int, err error)
}
type WriterTo interface {
	WriteTo(w Writer) (n int64, err error)
