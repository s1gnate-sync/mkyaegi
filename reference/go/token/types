type File struct {
	// Has unexported fields.
}
func (f *File) AddLine(offset int)
func (f *File) AddLineColumnInfo(offset int, filename string, line, column int)
func (f *File) AddLineInfo(offset int, filename string, line int)
func (f *File) Base() int
func (f *File) Line(p Pos) int
func (f *File) LineCount() int
func (f *File) LineStart(line int) Pos
func (f *File) Lines() []int
func (f *File) MergeLine(line int)
func (f *File) Name() string
func (f *File) Offset(p Pos) int
func (f *File) Pos(offset int) Pos
func (f *File) Position(p Pos) (pos Position)
func (f *File) PositionFor(p Pos, adjusted bool) (pos Position)
func (f *File) SetLines(lines []int) bool
func (f *File) SetLinesForContent(content []byte)
func (f *File) Size() int
type FileSet struct {
	// Has unexported fields.
}
func NewFileSet() *FileSet
func (s *FileSet) AddFile(filename string, base, size int) *File
func (s *FileSet) Base() int
func (s *FileSet) File(p Pos) (f *File)
func (s *FileSet) Iterate(f func(*File) bool)
func (s *FileSet) Position(p Pos) (pos Position)
func (s *FileSet) PositionFor(p Pos, adjusted bool) (pos Position)
func (s *FileSet) Read(decode func(any) error) error
func (s *FileSet) RemoveFile(file *File)
func (s *FileSet) Write(encode func(any) error) error
type Pos int
const NoPos Pos = 0
func (p Pos) IsValid() bool
type Position struct {
	Filename string // filename, if any
	Offset   int    // offset, starting at 0
	Line     int    // line number, starting at 1
	Column   int    // column number, starting at 1 (byte count)
}
func (pos *Position) IsValid() bool
func (pos Position) String() string
type Token int
const (
	// Special tokens
	ILLEGAL Token = iota
	EOF
	COMMENT
	// Identifiers and basic type literals
	// (these tokens stand for classes of literals)
	IDENT  // main
	INT    // 12345
	FLOAT  // 123.45
	IMAG   // 123.45i
	CHAR   // 'a'
	STRING // "abc"
	// Operators and delimiters
	ADD // +
	SUB // -
	MUL // *
	QUO // /
	REM // %
	AND     // &
	OR      // |
	XOR     // ^
	SHL     // <<
	SHR     // >>
	AND_NOT // &^
	ADD_ASSIGN // +=
	SUB_ASSIGN // -=
	MUL_ASSIGN // *=
	QUO_ASSIGN // /=
	REM_ASSIGN // %=
	AND_ASSIGN     // &=
	OR_ASSIGN      // |=
	XOR_ASSIGN     // ^=
	SHL_ASSIGN     // <<=
	SHR_ASSIGN     // >>=
	AND_NOT_ASSIGN // &^=
	LAND  // &&
	LOR   // ||
	ARROW // <-
	INC   // ++
	DEC   // --
	EQL    // ==
	LSS    // <
	GTR    // >
	ASSIGN // =
	NOT    // !
	NEQ      // !=
	LEQ      // <=
	GEQ      // >=
	DEFINE   // :=
	ELLIPSIS // ...
	LPAREN // (
	LBRACK // [
	LBRACE // {
	COMMA  // ,
	PERIOD // .
	RPAREN    // )
	RBRACK    // ]
	RBRACE    // }
	SEMICOLON // ;
	COLON     // :
	// Keywords
	BREAK
	CASE
	CHAN
	CONST
	CONTINUE
	DEFAULT
	DEFER
	ELSE
	FALLTHROUGH
	FOR
	FUNC
	GO
	GOTO
	IF
	IMPORT
	INTERFACE
	MAP
	PACKAGE
	RANGE
	RETURN
	SELECT
	STRUCT
	SWITCH
	TYPE
	VAR
	// additional tokens, handled in an ad-hoc manner
	TILDE
)
func Lookup(ident string) Token
func (tok Token) IsKeyword() bool
func (tok Token) IsLiteral() bool
func (tok Token) IsOperator() bool
func (op Token) Precedence() int
