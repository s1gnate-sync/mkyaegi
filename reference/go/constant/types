type Kind int
const (
	// unknown values
	Unknown Kind = iota
	// non-numeric values
	Bool
	String
	// numeric values
	Int
	Float
	Complex
)
func (i Kind) String() string
type Value interface {
	// Kind returns the value kind.
	Kind() Kind
	// String returns a short, quoted (human-readable) form of the value.
	// For numeric values, the result may be an approximation;
	// for String values the result may be a shortened string.
	// Use ExactString for a string representing a value exactly.
	String() string
	// ExactString returns an exact, quoted (human-readable) form of the value.
	// If the Value is of Kind String, use StringVal to obtain the unquoted string.
	ExactString() string
	// Has unexported methods.
}
func BinaryOp(x_ Value, op token.Token, y_ Value) Value
func Denom(x Value) Value
func Imag(x Value) Value
func Make(x any) Value
func MakeBool(b bool) Value
func MakeFloat64(x float64) Value
func MakeFromBytes(bytes []byte) Value
func MakeFromLiteral(lit string, tok token.Token, zero uint) Value
func MakeImag(x Value) Value
func MakeInt64(x int64) Value
func MakeString(s string) Value
func MakeUint64(x uint64) Value
func MakeUnknown() Value
func Num(x Value) Value
func Real(x Value) Value
func Shift(x Value, op token.Token, s uint) Value
func ToComplex(x Value) Value
func ToFloat(x Value) Value
func ToInt(x Value) Value
